{"version":3,"sources":["components/AboutDialog.js","components/Navbar.js","containers/Map.js","components/GeoStatus.js","components/Footer.js","services/geoService.js","App.js","serviceWorker.js","index.js"],"names":["props","anchor","href","Dialog","open","onClick","handleClose","DialogTitle","id","List","style","styles","list","ListItem","ListItemText","primary","secondary","Divider","window","location","root","title","line","fontSize","display","img","maxWidth","marginBottom","textAlign","marginLeft","flexGrow","Navbar","AppBar","position","background","Toolbar","IconButton","color","aria-label","src","alt","Typography","variant","handleDialog","AboutDialog","MapWithAMarker","withScriptjs","withGoogleMap","coord","lat","latitude","lng","longitude","console","log","defaultZoom","defaultCenter","center","Map","isMarkerShown","googleMapURL","loadingElement","height","containerElement","mapElement","flexAlign","justifyContent","margin","item","time","GeoStatus","lastUpdated","parseFloat","toFixed","speed","moment","format","warningBar","warning","toolbar","content","GeoService","_apiUrl","process","_token","auth","username","password","_headers","r","method","headers","this","mode","cache","url","replace","axios","get","res","data","error","App","state","user","enableTracking","updateCoord","a","geoService","newCoord","attributes","last_updated","setState","setInterval","className","Footer","React","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.993000df.chunk.js","sourcesContent":["import React from 'react'\nimport { Dialog, DialogTitle, Divider, List, ListItem, ListItemText } from '@material-ui/core';\n\nexport default (props) => {\n  const anchor = <a href=\"https://github.com/hugueds/cardapio-sla/\"> https://github.com/hugueds/linha12/</a>;\n\n    return (\n    <Dialog open={props.open} onClick={props.handleClose}>\n      <DialogTitle id=\"dialog-title\">INFORMAÇÕES</DialogTitle>\n      <List style={styles.list}>\n        <ListItem>\n          <ListItemText primary=\"Criado por\" secondary=\"Hugo Peres\"/>\n        </ListItem>\n        <Divider />\n        <ListItem onClick={() => window.location.href = 'mailto: hugo-pdf@hotmail.com?subject=LINE 12' }>\n          <ListItemText  primary=\"Contato\" secondary=\"hugo-pdf@hotmail.com\" />\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Repositorio\" secondary={anchor} />\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Data de Criação\" secondary=\"23/11/2019\" />\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Ultima atualização do software\" secondary=\"23/11/2019\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  )\n}\n\nconst styles = {\n  root: {\n\n  },\n  title: {\n\n  },\n  line: {\n\n  }, \n  list: {\n    fontSize: 5\n  }\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Info from '@material-ui/icons/Info';\nimport AboutDialog from './AboutDialog';\n\nconst iconUrl = \"https://static.scania.com/resources/logotype/favicon/android-icon-72x72.png\";\n\nconst Navbar = (props) => {\n    return (\n        <AppBar position=\"static\" style={{ background: '#041E42' }}>\n            <Toolbar>\n                <IconButton color=\"inherit\" aria-label=\"Menu\">\n                    <img style={styles.img} src={iconUrl} alt=\"\" />\n                </IconButton>\n                <Typography style={styles.title} variant=\"h6\" color=\"inherit\">\n                    LINHA 12\n                    </Typography>\n                <IconButton color=\"inherit\" aria-label=\"Menu\" onClick={props.handleDialog}>\n                    <Info />\n                </IconButton>\n            </Toolbar>\n            <AboutDialog\n                handleClose={props.handleClose}\n                open={props.open}\n                handleDialog={props.handleDialog}\n            />\n        </AppBar>\n    )\n}\n\nconst styles = {\n    root: {\n        display: 'flex'\n    },\n    img: {\n        maxWidth: 37,\n        marginBottom: '5%'\n    },\n    title: {\n        textAlign: 'center',\n        marginLeft: '2%',\n        flexGrow: 1\n    }\n}\n\n// Scania blue HEX #041E42\n// Scania White HEX #FAFAFA\n// Scania Red HEX #D6001C\n\nexport default Navbar;","import React from 'react';\nimport {\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n    Marker,\n} from \"react-google-maps\";\n\n\n\nconst Map = (props) => {\n\n    return (\n        <MapWithAMarker\n            coord={props.coord}\n            isMarkerShown\n            googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCm_DEhKDzjQjoBOBbbyhRhMLyRFCY8QPM&v=3.exp&libraries=geometry,drawing,places\"\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={<div style={{ height: `72.5vh` }} />}\n            mapElement={<div style={{ height: `100%` }} />}\n        />\n    );\n\n};\n\nconst MapWithAMarker = withScriptjs(withGoogleMap(props => {\n\n    // pegar GeoLoc da Scania\n    // const lat = -23.6843437; // TEST \n    // const lng = -46.5105444; // TEST\n    // const [coord] = useState({ lat: props.latitude || lat, lng: props.longitude || lng }); \n\n    const coord = {\n        lat: props.coord.latitude || 0,\n        lng: props.coord.longitude || 0\n    }\n\n    console.log(coord)\n\n    return (\n\n        <GoogleMap\n            defaultZoom={15}\n            defaultCenter={coord}\n            center={coord}\n        >\n            <Marker position={coord} />\n\n        </GoogleMap>\n    );\n}\n));\n\n\n\nexport default Map;","import React from 'react';\nimport moment from 'moment';\n\nconst styles = {\n    background: '#FAFAFA',\n    display: 'flex',\n    flexAlign: 'center',\n    justifyContent: 'space-around',\n    margin: '0.8vh 0 0.8vh 0',\n    fontSize: '3vw',\n    item: {\n        display: 'flex'\n    },\n    time: {\n        display: 'flex'\n    }\n}\n\nconst GeoStatus = (props) => {\n\n    const coord = props.coord;\n    const lastUpdated = props.lastUpdated;\n\n    const lat = +(parseFloat(coord.latitude).toFixed(4))\n    const lng = +(parseFloat(coord.longitude).toFixed(4))\n\n    return (\n        <div style={styles}>\n            <div style={styles.item}>\n                LAT: { lat || 0}\n            </div>\n            <div style={styles.item}>\n                LON: { lng || 0}\n            </div>\n            <div style={styles.item}>\n                VEL: {coord.speed || 0}<div></div>\n            </div>\n            <div style={styles.time}>\n                TIME: {moment(lastUpdated).format('DD/MM/YYYY - HH:mm:ss')}\n            </div>\n        </div>\n    );\n\n}\n\nexport default GeoStatus;\n","\nimport React from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst background = '#041E42';\n\nexport default (props) => {\n    return (\n        <AppBar position=\"static\" style={{ background }}>\n            <Toolbar style={styles.warningBar}>\n                <Typography style={styles.warning}>\n                    Este não é um Aplicativo oficial, quaisquer divergências nas informações apresentadas não é de responsabilidade do serviço de transportes\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nconst styles = {\n    toolbar: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    content: {\n        textAlign: 'center',\n        fontSize: '2vh'\n    },\n    warningBar: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    warning: {\n        display: 'flex',\n        fontSize: '1.75vh',\n        color: 'white'\n    }\n}\n","import axios from 'axios';\n\nclass GeoService {\n\n    _apiUrl = process.env.REACT_APP_API_URL;\n    _token = process.env.REACT_APP_API_TOKEN;\n\n    auth = {\n        username: 'hassio',\n        password: 'Scaniascania5'\n    }\n\n    _headers = {\n        'Authorization': 'Basic Authentication',\n        'Content-ype': 'application/json',\n    }\n\n    r = {\n        method: 'GET',\n        headers: this._headers,\n        mode: 'cors',\n        cache: 'default'\n    }  \n\n    async get(url = this._apiUrl, line = 12) {\n        try {\n            url = url.replace('{line}', line);\n            url = 'https://hugueds.duckdns.org:1880/endpoint/hello';           \n            const res = await axios.get(url, { auth: this.auth });\n            return res.data;\n        } catch (err) {\n            console.error(err);\n            return false;\n        }\n    }\n}\n\n\nexport default GeoService;\n","import React from 'react';\n\nimport Navbar from './components/Navbar';\nimport Map from './containers/Map';\nimport GeoStatus from './components/GeoStatus';\nimport Footer from './components/Footer';\n\nimport GeoService from './services/geoService';\n\nimport './App.css';\n\nconst updateTime = process.env.REACT_APP_UPDATE_TIME || 5000;\n\nclass App extends React.Component {\n\n  state = {\n    user: '',\n    enableTracking: true,\n    coord: {\n      lat: 0,\n      lng: 0,\n      speed: 0\n    },\n    lastUpdated: '',\n  }\n\n  componentDidMount() {\n    this.updateCoord();\n    setInterval(() => {\n      this.updateCoord();\n    }, updateTime);\n  }\n\n  updateCoord = async () => {\n    const geoService = new GeoService();\n    let coord = { ...this.state.coord };\n    let lastUpdated = { ...this.state.lastUpdated }\n    const newCoord = await geoService.get();\n    coord = newCoord.attributes;\n    lastUpdated = newCoord.last_updated;\n    this.setState({ coord });\n    this.setState({ lastUpdated });\n  }\n\n\n  render() {\n\n    const { coord } = this.state;\n\n    return (\n\n      <div className=\"App\">\n\n        <Navbar open={false} />\n        <Map coord={coord} />\n        <GeoStatus coord={coord} lastUpdated={this.state.lastUpdated} />\n        <Footer />\n\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}